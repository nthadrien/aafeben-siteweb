
    
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<aside class="d-flex flex-wrap gap-2 justify-content-between align-items-center">

    <nav class="pagination" >

        <li class="page-item">
            <a asp-action="Index"
                asp-route-sortOrder="@ViewData["CurrentSort"]"
                asp-route-pageNumber="@(Model.PageIndex - 1)"
                asp-route-currentFilter="@ViewData["CurrentFilter"]"
                class="page-link small @prevDisabled">
                    <i class="bi bi-chevron-left"></i>
            </a>
        </li>

        @for( int i = 1 ; i <= Model.TotalPages ; i++ ) {
            <li class="page-item">
                @if( @Model.PageIndex == i ) {
                    <a class="page-link active" asp-route-pageNumber="@i" >
                        @i
                    </a>
                } else {
                    <a class="page-link" asp-route-pageNumber="@i" >
                        @i
                    </a>
                }
            </li>
        }
        <li class="page-item">
            <a asp-action="Index"
                asp-route-sortOrder="@ViewData["CurrentSort"]"
                asp-route-pageNumber="@(Model.PageIndex + 1)"
                asp-route-currentFilter="@ViewData["CurrentFilter"]"
                class="page-link small @nextDisabled">
                    <i class="bi bi-chevron-right"></i>
            </a>
        </li>

    </nav>

    <p>
        vue: 
        @(Model.Count * Model.PageIndex ) / @Model.Count
    </p>

</aside>
